plugins {
    id "java"
    id "de.lukaskoerfer.gradle.delombok" version "0.2"
    id 'com.github.johnrengelman.shadow' version "6.0.0"
    id('io.ebean') version '12.8.0'
}
group 'cc.sfclub.polar'
version '5.0.0'

assemble.dependsOn(shadowJar)
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    maven { url 'https://jitpack.io' }
    jcenter()
    maven {
        name = "mavenCentral"
        url = "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven {    url "https://libraries.minecraft.net"}
}
javadoc {
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    source = "build/delombok/delombok"
    failOnError = false
}
task info {
    println 'Building on '+System.getProperty("os.name") +" by user "+System.getProperty("user.name")
}
shadowJar {
    zip64 true
    classifier(getCheckedOutGitCommitHash()+"-"+(System.getProperty("user.name").contains("bear") || System.getProperty("user.name").equals("runner")?"Official":"Community"))
    manifest {
        attributes 'Main-Class': 'cc.sfclub.polar.loader.Loader',
                'Build-Date': new Date().toString(),
        'Build-By': System.getProperty("user.name"),
        'Commit-Hash': getCheckedOutGitCommitHash(),
        'Version': project.version
    }
}
def getCheckedOutGitCommitHash() {
    def gitFolder = "$projectDir/.git/"
    def takeFromHash = 7
    /*
     * '.git/HEAD' contains either
     *      in case of detached head: the currently checked out commit hash
     *      otherwise: a reference to a file containing the current commit hash
     */
    def head = new File(gitFolder + "HEAD").text.split(":") // .git/HEAD
    def isCommit = head.length == 1 // e5a7c79edabbf7dd39888442df081b1c9d8e88fd
    // def isRef = head.length > 1     // ref: refs/heads/master

    if(isCommit) return head[0].trim().take(takeFromHash) // e5a7c79edabb

    def refHead = new File(gitFolder + head[1].trim()) // .git/refs/heads/master
    refHead.text.trim().take takeFromHash
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.greenrobot:eventbus:3.2.0'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'asia.kala', name: 'kala-ansi', version: '0.1.0'
    //Logger
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compileOnly 'org.jetbrains:annotations:21.0.1'
    //Database
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.2'
    compile 'io.ebean:ebean:12.8.0'

    // query bean generation
    annotationProcessor 'io.ebean:querybean-generator:12.8.0'

    testCompile 'io.ebean:ebean-test:12.8.0'

    //Utils
    //implementation 'org.reflections:reflections:0.9.12'
    compile 'com.github.iceBear67:Util:96b6e38669'
    compile 'com.mojang:brigadier:1.0.17'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
}